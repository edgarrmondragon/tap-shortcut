[tool.poetry]
name = "tap-shortcut"
version = "0.0.1"
description = "`tap-shortcut` is a Singer tap for Shortcut, built with the Meltano SDK for Singer Taps."
authors = ["Edgar Ramírez-Mondragón <edgarrm358@gmail.com>"]
keywords = [
  "ELT",
  "singer.io",
  "Shortcut",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-shortcut"
repository = "https://github.com/edgarrmondragon/tap-shortcut"
documentation = "https://github.com/edgarrmondragon/tap-shortcut#readme"

[tool.poetry.dependencies]
python = "<3.12,>=3.7.1"
singer-sdk = ">=0.31,<0.33"
toolz = "0.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "tap_shortcut"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["backoff.*", "toolz.*", "singer.*"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.poetry.scripts]
# CLI declaration
tap-shortcut = "tap_shortcut.tap:TapShortcut.cli"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
ignore = [
  "ANN101", # missing-type-self
  "DJ",     # flake8-django
]
line-length = 88
select = ["ALL"]
src = ["tap_shortcut", "tests"]
target-version = "py37"
unfixable = [
  "ERA001",  # commented-out-code
]

[tool.ruff.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = [
  "ANN201",  # missing-return-type-public-function
  "S101",    # assert
  "SLF001",  # private-member-access
]

[tool.ruff.isort]
known-first-party = ["tap_shortcut"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.pydocstyle]
convention = "google"
